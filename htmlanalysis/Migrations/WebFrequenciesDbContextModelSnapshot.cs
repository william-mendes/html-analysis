// <auto-generated />
using System;
using HTMLAnalysis.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HTMLAnalysis.Migrations
{
    [DbContext(typeof(WebFrequenciesDbContext))]
    partial class WebFrequenciesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HTMLAnalysis.Domain.Fetches.FetchEntity", b =>
                {
                    b.Property<string>("Url")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Url");

                    b.ToTable("Fetches");
                });

            modelBuilder.Entity("HTMLAnalysis.Domain.Frequencies.FrequencyEntity", b =>
                {
                    b.Property<string>("SaltedHash")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnalysisUrl");

                    b.Property<int>("Count");

                    b.Property<string>("EncryptedWord");

                    b.HasKey("SaltedHash");

                    b.HasIndex("AnalysisUrl");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("HTMLAnalysis.Domain.Frequencies.FrequencyEntity", b =>
                {
                    b.HasOne("HTMLAnalysis.Domain.Fetches.FetchEntity", "Analysis")
                        .WithMany()
                        .HasForeignKey("AnalysisUrl");
                });
#pragma warning restore 612, 618
        }
    }
}
