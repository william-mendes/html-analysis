// <auto-generated />
using System;
using HtmlAnalysis.Core.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HtmlAnalysis.Core.DataAccess.Migrations
{
    [DbContext(typeof(WebFrequenciesDbContext))]
    partial class WebFrequenciesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HtmlAnalysis.Core.Domain.Entities.FetchEntity", b =>
                {
                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Source");

                    b.ToTable("Fetches");
                });

            modelBuilder.Entity("HtmlAnalysis.Core.Domain.Entities.FrequencyEntity", b =>
                {
                    b.Property<string>("SaltedHash")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("EncryptedWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FetchSource")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SaltedHash");

                    b.HasIndex("FetchSource");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("HtmlAnalysis.Core.Domain.Entities.FrequencyEntity", b =>
                {
                    b.HasOne("HtmlAnalysis.Core.Domain.Entities.FetchEntity", "Fetch")
                        .WithMany("Frequencies")
                        .HasForeignKey("FetchSource");
                });
#pragma warning restore 612, 618
        }
    }
}
